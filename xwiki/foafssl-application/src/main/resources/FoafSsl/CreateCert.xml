<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
<web>WebId</web>
<name>CreateCert</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator>XWiki.Admin</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>XWiki.Admin</contentAuthor>
<creationDate>1267009752000</creationDate>
<date>1267010036000</date>
<contentUpdateDate>1267010036000</contentUpdateDate>
<version>3.1</version>
<title>Create your WebId Certificate</title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/2.0</syntaxId>
<hidden>false</hidden>
<object>
<class>
<name>XWiki.TagClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<tags>
<cache>0</cache>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>tags</name>
<number>1</number>
<prettyName>Tags</prettyName>
<relationalStorage>1</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>30</size>
<unmodifiable>0</unmodifiable>
<values></values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</tags>
</class>
<name>WebId.CreateCert</name>
<number>0</number>
<className>XWiki.TagClass</className>
<guid>d43ebc93-27d4-4ed9-aaf1-08c47425090e</guid>
<property>
<tags/>
</property>
</object>
<content>{{velocity}}
#set( $spkac = $request.spkac )
#set( $foafssl = $services.foafssl )
#set( $homepage = $xwiki.getDocument($context.user) )
#set( $addKey = true )

#if(! $!xwiki.exists("WebId.RSAPubKeyClass"))

You need to create the WebId.RSAPubKeyClass
It should come with this installation's XAR file. If not you can [[create it here&gt;&gt;WebId.RSAPubKeyClass]] with the following properties:
 * A hexModulus TextArea
 * An intExponent NumberField
 * A name String Field
 * A validTo and validFrom date Field

#elseif ( $request.getParameterMap().isEmpty())
 {{html clean="false"}}
 &lt;form id="keygenform" action="" method="post"&gt;
  &lt;table width="95%"&gt;
    &lt;tr&gt;
       &lt;td&gt;Common Name: &lt;/td&gt;
       &lt;td&gt;&lt;input name="cn" size="30" id="cn" type="text" value="Xwiki Test Cert" /&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;WebID: &lt;/td&gt;
      &lt;td&gt;&lt;input name="webid" size="60" id="webid" type="text" value="${homepage.getExternalURL()}#me"/&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Key strength: &lt;/td&gt;
      &lt;td  id="keystrenghtd"&gt;&lt;keygen id="spkac" name="spkac" challenge="TheChallenge1"/&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Valid for: &lt;br/&gt;
          (defaults to 1 year)&lt;/td&gt;
      &lt;td&gt;&lt;input type="text" name="hours" value="0.0" size="4"/&gt; hours&lt;br/&gt;
          &lt;input type="text" name="days" value="0" size="4"/&gt; days &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Debug: &lt;/td&gt;
      &lt;td&gt;&lt;input type="checkbox" name="viewParams" value="yes" /&gt; view parameters&lt;br/&gt;
          &lt;input type="checkbox" name="showCert" value="yes" /&gt; show  certificate&lt;br/&gt;
          &lt;input type="checkbox" name="makeKeyObj" value="yes" /&gt; create local objects&lt;br/&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
       &lt;td colspan="2"&gt;
         If none of the above debug options are checked then the following will happen on clicking submit:
        &lt;ol&gt;
            &lt;li&gt;your browser will create a public/private key pair&lt;/li&gt;
            &lt;li&gt;send us your public key, in what is known as a &lt;a href="http://en.wikipedia.org/wiki/Certification_request"&gt;certification request&lt;/a&gt; along with information from the form above&lt;/li&gt;
            &lt;li&gt;we will create a certificate with the parameters specified&lt;/li&gt;
            &lt;li&gt;it will be returned to you and your browser will match it with your private key and add the pair to your keychain&lt;/li&gt;
            &lt;li&gt;a &lt;a href="$xwiki.getDocument('WebId.RSAPubKeyClass').getURL('edit','editor=class')"&gt;WebId.RSAPubKeyClass&lt;/a&gt; object will be created in &lt;a href="$homepage"&gt;your public profile&lt;/a&gt;, which you will then see clearly in  &lt;a target="_blank" href="${homepage.getURL('edit','editor=object')}"&gt;its object view&lt;/a&gt;. Your profile should also have an RDF view of the key.&lt;/li&gt;
        &lt;/ol&gt;
        &lt;/td&gt;
  &lt;/tr&gt;
  &lt;/table&gt;
  &lt;input id="keygensubmit" type="submit" value="submit certificate request" /&gt;
 &lt;/form&gt;
&lt;p&gt;To test your certificates try some of &lt;a href="http://esw.w3.org/topic/foaf+ssl"&gt;the foaf+ssl test pages&lt;/a&gt;.&lt;/p&gt;
 {{/html}}
#elseif($request.getParameter('viewParams') eq "yes")
  #foreach($key in $request.parameterNames)
     $key = $request.getParameter($key)
  #end
  #set( $addKey = false )
#end
#if( $spkac )
  #set( $cert = $foafssl.createFromSpkac( $request.spkac ) )
  #set( $pk = $cert.getSubjectPublicKey() )

  $cert.setSubjectWebID( $request.webid )
  $cert.setSubjectCommonName( $request.cn )

  #set ($hours = $request.getParameter('hours') )
  #if ($hours &amp;&amp; $hours ne "")
     h = $hours
     $cert.addDurationInHours( $hours )
  #end

  #set ($days = $request.getParameter('days') )
  #if ($days &amp;&amp; $days ne "")
     d=$days
     $cert.addDurationInDays( $days )
  #end

  #set($s = $cert.getSerialisation())

  #if( $request.getParameter('showCert') eq "yes")
   The certificate that would have been sent back to you is:
    mime-type: $s.getMimeType()
    Content-Length: $s.getLength()

    cert = $s.toString()
    #set( $addKey = false )
  #end
  #if ( $addKey ) ## up to here if addKey is still true, then we are creating a cert
    $s.writeTo( $response )
    $context.setFinished(true)
  #end

  #if ( $request.getParameter('makeKeyObj') eq "yes" )
   The Public Key, that will be stored on the server is:
    * hex= $pk.getHexModulus()
    * int= $pk.getIntExponent()
{{html}}More info in  &lt;a target="_blank" href="${homepage.getURL('edit','editor=object')}"&gt;its object view&lt;/a&gt;{{/html}}
    #set( $addKey = true )
  #end

  #if ( $addKey )
    ## create and save the public key to the user's profile page
    #set( $rsaKey = $homepage.newObject("WebId.RSAPubKeyClass"))
    $!rsaKey.set("hexModulus", $pk.getHexModulus() )
    $!rsaKey.set("intExponent", $pk.getIntExponent() )
    $!rsaKey.set("name", $request.getParameter('cn') )
    $!rsaKey.set("validFrom", $cert.getStartDate() )
    $!rsaKey.set("validTo", $cert.getEndDate() )
    $!homepage.save()
  #end
#end

{{/velocity}}</content>
</xwikidoc>
